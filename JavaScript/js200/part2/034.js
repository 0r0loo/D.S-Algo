// 034 함수 이해하기

/*
    수학의 함수식 f(x)를 떠올려 보자. 예를 들어 함수식이 f(x) = x + 1 이면 x에 임의의 값 3을 넣은 함수식은
    f(3) = 3 + 1 가 되고 연산의 결과값 4를 반환한다. 자바스크립트 함수도 이와 유사하다

    function 함수이름  (매개변수 목록) {
        함수 실행부
    }

    함수 형태를 표현하면 크게 4가지로 구분된다.

    첫 번쨰는 키워드 function 이다. 함수 자료형은 키워드 function을 앞에 붙여 함수로 정의한다. 그러나
    ES6부터는 function 없이도 함수로 정의할 수 있는데ㅡ 이는 47장에서

    두 번쨰는 함수 이름이다. function 과 소괄호 () 사이에 이름을 정의하며, 이를 통해 함수를 식별할 수 있다.
    더 나아가 함수 내에서 재귀로 자기 자신을 참조할 수도 있다.
    이름을 정의하지 않은 함수도 존재하는데, 이를 익명함수라고 부른다.

    세 번쨰는 매개변수 목록이다. 함수 이름 옆에 소괄호()로 둘러 싸인 부분이 있다. 함수 선언시 매개변수 목록을 정의하면
    함수를 호출할 떄 인자값을 전달하 수 있다.
    물론 함수 안에서 전역 변수를 가져와 처리할 수도 있지만, 되도록 매개변수를 통해 값을 전달하는 것을 권장한다.
    이와 관련 36장 39장

    네 번쨰는 함수 실행부이다. 함수가 호출되면 실행되는 몸통부로 중괄호 {} 안에 다발의 코드를 작성한다.

    자바스크립트에서는 함수를 만드는 데 두 가지 방식으로 나타낼 수 있다. 
    이는 함수 표현식과 함수 선언문이다.
    다음의 예제에서 함수 표현식과 선언문 각각을 정의하고 호출하는 방법을 살펴보자

*/



var greeting_expression = function (name) {
    console.log('Hi, ' + name);
}

function greeting_declration (name) {
    console.log('Hi, ' + name);
}

greeting_expression('Chloe');
greeting_declration('Chloe');


