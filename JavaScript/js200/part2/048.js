// 048 자바스크립트 객체지향 프로그래밍 이해하기

/*
    객체지향 프로그래밍이란, 프로그램을 객체들로 구성하고 객체들 간에 서로 상화작용 하도록 작성하는 방법이다.
    그러면 객체에 대해 다시 정의할 필요가 있다.
    객체이해하기 에서 객체 값들을 그룹으로 묶은 데이터 모음이라고 소개했다.
    하지만 객체지향에서 객체란 식별 가능한 구체적인 사물 또는 추상적인 개념이라고 정의한다.
    이 책을 읽고 있는 여러분도 객체이고, 읽고 있는 이 책도 객체이다.

    그리고 객체는 특정적인 행동과 변경 가능한 상태를 가진다.
    자바스크립트에서는 함수 값으로 가지는 속성을 메소드라고 하는데, 이 메소드를 특징적인 행동이며, 그 외에 다른 값들은 변경 가능한 상태라 볼 수 있다.

    자바스크립트의 객체를 객체지향에서 말하는 객체로 사용하려면 코드를 작성하는 프로그래머가 그에 맞게 작성해야한다.
    단순히 객체를 정의하였다고 객체지향 프로그래밍을 하는 것은 아니다
    다음의 코드는 코딩 선생님 제이와 학생 뽀양을 객체로 표현한 예제이다.
*/

const teacherJay = {
    name : '제이',
    age : 30,
    teachJavscript : function(student) {
        student.gainExp();
    }
}

const studentBbo = {
    name : '뽀',
    age : 20,
    exp : 0,
    gainExp : function() {
        this.exp++;
    }
}

console.log(studentBbo.exp);
teacherJay.teachJavscript(studentBbo);
console.log(studentBbo.exp);

/*
    객체지향에서는 무수히 많은 객체들을 공통적인 특성을 기준으로 객체를 묶어서 하나의 타입으로 정의한다.
    이렇게 타입을 정의하는 작업을 분류 라고 하며, 이는 일종의 추상화를 하는 것이다.
    예를 들어, 세상에는 자바스크립트를 가르치는 많은 선생이 존재하고, 제이도 그 중의 일부 객체이다.
    이때 우리는 자바스크립트 선생이란 타입을 분류하고 모든 자바스크립트 선생은 자바스크립트를 가리키는 공통 특징이 있다고 정의할 수 있다.

    자바스크립트는 프로토 타입 기반으로 객체지향 프로그래밍을 지원한다
    자바의 클래스 기반과의 큰 차이점으로 프로토타입으로 객체에 공통 사항을 적용할 수 있다.
    즉 모든 객체는 다른 객체의 원형(prototype)이 될 수 있다. 특징을 묘사하는 원형 객체를 만들고 이 원형 객체에 기반하는 여러 객체들을 만들면 모두 같은 특징을 가짌 수 있다.

*/

const studentProto = {
    gainExp : function() {
        this.exp++;
    }
}

const harin = {
    name : '하린',
    age : 10,
    exp : 0,
    __proto__ : studentProto
};

const bbo = {
    name : '뽀',
    age : 20,
    exp : 10,
    __proto__ :studentProto
};

bbo.gainExp();
harin.gainExp();
harin.gainExp();
console.log(harin);
console.log(bbo)

/*
    자바스크립트에서는 __proto__ 속성으로 원형 객체를 정의할 수 있다. 모든 자바스크립트 객체는 __proto__ 속성을 가지는데
    예제 코드에서 처럼 별도로 __proto__ 속성에 다른 객체를 할당하지 않으면 기본적으로 Object.prototype 객체가 연결되어 있다.
*/