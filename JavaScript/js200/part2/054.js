// 054 this 이해하기

/*
    this는 함수가 어떻게 호출되는지에 따라 동적으로 결정된다.
    this의 주요 목적은 작성된 코드를 여러 목적으로 재사용하기 위해 존재하는데, 호출되는 방식에 따라 동적으로 결정되어 간혹 잘못된 코드를 작성할 수 있다.

    this는 전역에서 사용할 수도 있고 함수 안에서도 사용할 수 있다.
    하지만 함수는 객체 안에 메소드로 정의될 수도 있고, 생성자 함수로 사용될 수도 있고, 특정 로직을 계산하여 값을 반환하는 목적으로도 사용할 수 있다.

    이렇게 함수가 다양하게 사용되다 보니 this도 각 함수별로 다르게 해석된다.
    물론 화살표 함수에서의 this 도 다르게 해석된다.
    그리고 class 안에서 사용되는 this는 생성자 함수와 동일하다.    
*/
