// 060 표준 내장 객체 이해하기

/*
    자바스크립트에는 ECMAScript 구현 명세에 의해 정의된 표준 내장 객체(Standard Built-in Objects 또는 Global Objects)가 있다.
    표준 내장 객체는 전역 스코프 안에 있는 개체들을 참조하고 있어,
    자바스크립트 실행할 때 어떤 환경(브라우저, 서버)이라도 전역에서 사용 가능하다.

    몇몇 표준 내장 객체는 객체임에도 불구하고 함수처럼 호출할 수 있다.
    여느 다른 함수처럼 매개변수를 받고, 함수 몸통(중괄호 안의 코드 다발)에 내장 함수 객체의 행위를 특징화 하는 코드들이 구현되어 있다.
    이러한 형태를 내장 함수 객체라고 한다.
    new 지시자를 사용하여 함수 형태로 호출하며, 생성자를 생성한다.
    이외에도 표준 내장 객체 내부에는 속성과 메소드가 정의되어 있다.
*/

const str = new String('자바스크립트');
const num = new Number(200);
const bool = new Boolean(true);
const date = new Date();
const map = new Map();
const set = new Set();

console.log(Math.PI);
console.log(Date.parse('2019-01-01'));
console.log(JSON.parse('{}'))



/*
    표준 내장 객체의 sTring, Number, Boolean 이 원시 자료형의 문자형, 숫자형, 불린형과 어떻게 다른지 의문이 생긴다.
    내장 객체와 원시 자료형의 차이점에 대해 문자열 값을 두 가지 형태로 대입하여 살펴보자

    자바스크립트에서는 원시 자료형이 각 성격에 맞게 표준 내장 객체로 자동으로 래핑된다.
    즉, 문자열로 작성된 값이 String 객체로 래핑된다는 의미이다.
    자료형을 확인하면 확연하게 다른 것으로 구분되지만, 원시 자료형 값이지만 표준 내장 객체로 래핑됨에 따라 내장 객체에서 제공하는
    메소드나 속성을 가져다 사용할 수 있다.

    Object : 다른 표준 내장 객체의 기본이 되는 일반 객체이다.
    Number : 숫자형을 감싼 객체이다. 숫자형과 관련된 함수와 속성을 갖고 있다.
    String : 문자형을 감싼 객체이다 문자형을 조각하거나 특정 문자열을 찾고 추출하는 등의 메소드와 속성을 활용할 수 있다.
    Array : 모든 배열은 Array.prototype 을 상속 받는다. Array 객체는 리스트처럼 배열 역할을 지니며, 배열 요소를 추가 /삭제 하거나,
    배열 자체를 순호;/ 변형 하는 다양한 메소드와 속성을 지니고 있다
    Math : 수리 연산을 위한 속성과 메소드를 지닌 내장 객체이다.
    다른 내장 객체와 달리 Math 객체는 new 를 통해 인스턴스를 생성하지 않는다
     static으로 정의된 속성과 메소드를 직접 호출해야한다.
    Date : 시간에 관련된 객체이다 현재시간을 비롯하여 국제 표준시에 따른 시간 변환 계산도 할 수 있다.
    JSON : JavaScript Object Notation 을 의미한다 이를 다른 자료형으로 변환하거나 다시 JSON으로 변환하는 등의 메소드를 제공하고 있다
    RegEXP : 정규 표현식은 특정 문자열 처리를 위해 사용하는 문자열 패턴 정의를 의미하낟
    정규표현식을 적용 가능한 문자열 탐색, 비교, 대체 등의 문자열 처리 메소드들을 지원한다..
    Map : ES6 부터 표준으로 추가된Map 객체는 키:값 데이터 구조를 지닌 데이터 집합체이다
    키의 중복성을 허용하지 않으며 관련된 속성, 메소드들을 갖고 있다. 또한 Iterator를 통해 Map 의 데이터를순회한다는 특징이 있다
    Set : ES6 부터 표준으로 추가된 객체형으로 오직 값으로 이루어진 데이터 집합체이다. 그래서 어뜬 배열과 비슷하게 느껴질수도 있으나 내부 속성, 메소드의 구성이다르고
    또한 Iterator 로 순회된다는 점, 값의 중복성을 허용하지 않는 차이가 있다.
*/